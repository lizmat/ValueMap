=begin pod

=head1 NAME

ValueMap - Provide an immutable Map value type

=head1 SYNOPSIS

=begin code :lang<raku>

use ValueMap;

my %vm is ValueMap = foo => 42, bar => 666, baz => 137;

my $vm := ValueMap.new( (foo => 42, bar => 666, baz => 137) );

my %s is Set = $vm, %vm;
say %s.elems;  # 1

=end code

=head1 DESCRIPTION

Raku provides a semi-immutable C<Associative> datatype: C<Map>. A C<Map>
can not have any elements added or removed from it.  However, since a
C<Map> B<can> contain containers of which the value can be changed, it
is B<not> a value type. So you cannot use C<Map>s in data structures
such as C<Set>s, because each C<Map> is considered to be different from
any other C<Map>, because they are not value types.

=head1 AUTHOR

Elizabeth Mattijsen <liz@raku.rocks>

Source can be located at: https://github.com/lizmat/ValueMap .
Comments and Pull Requests are welcome.

If you like this module, or what Iâ€™m doing more generally, committing to a
L<small sponsorship|https://github.com/sponsors/lizmat/>  would mean a great
deal to me!

=head1 COPYRIGHT AND LICENSE

Copyright 2022, 2024, 2025 Elizabeth Mattijsen

This library is free software; you can redistribute it and/or modify it under the Artistic License 2.0.

=end pod

# vim: expandtab shiftwidth=4
